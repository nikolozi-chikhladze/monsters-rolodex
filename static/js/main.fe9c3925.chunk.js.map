{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","e","target","value","App","setState","searchField","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","trim","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAC5E,6BAA4BL,EAAMG,QAAQG,MAAjCN,EAAMG,QAAQC,IACvB,4BAAIJ,EAAMG,QAAQI,YCJjBC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SACDC,KAAI,SAAAP,GAAO,OACR,cAAC,EAAD,CAEIA,QAASA,GADJA,EAAQC,WCR5BO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLR,KAAK,SACLM,YAAaA,EACbG,SAAU,SAAAC,GAAC,OAAIH,EAAaG,EAAEC,OAAOC,YCqClCC,E,kDAzCb,aAAe,IAAD,8BACZ,gBAeFN,aAAe,SAACK,GACd,EAAKE,SAAS,CAACC,YAAaH,KAd5B,EAAKI,MAAQ,CACXb,SAAU,GACVY,YAAa,IALH,E,qDAUd,WAAqB,IAAD,OAClBE,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAACX,SAAUkB,S,oBAO5C,WACE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUY,EAAlB,EAAkBA,YACZQ,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,uBAC9CA,EAAQG,YADsC,aAC9C,EAAcyB,cAAcC,OAAOC,SAASZ,EAAYU,cAAcC,WAGxE,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAa,kBACbC,aAAce,KAAKf,eAErB,cAAC,EAAD,CACEJ,SAAUoB,W,GAnCFK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fe9c3925.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n            <h2 key={props.monster.id}>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.style.css'\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.monsters\r\n                    .map(monster => (\r\n                        <Card \r\n                            key={monster.id} \r\n                            monster={monster}\r\n                        />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <input \r\n            className=\"search\"\r\n            type=\"search\" \r\n            name=\"search\" \r\n            placeholder={placeholder}\r\n            onChange={e => handleChange(e.target.value)}\r\n        />\r\n    )\r\n}\r\n","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n    \n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({monsters: users}))\n  }\n\n  handleChange = (value) => {\n    this.setState({searchField: value})\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name?.toLowerCase().trim().includes(searchField.toLowerCase().trim())\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder={'Search monsters'}\n          handleChange={this.handleChange}\n        />\n        <CardList \n          monsters={filteredMonsters}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}